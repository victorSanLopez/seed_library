export const userValidation = {
  username: {
    required: "Un pseudo, c'est plus sympa pour te reconnaÃ®tre ! ğŸ˜Š",
    minLength: {
      value: 2,
      message: "Allez, au moins 2 caractÃ¨res pour ton pseudo !",
    },
    maxLength: {
      value: 50,
      message: "Ton pseudo est un peu long (max 50 caractÃ¨res) ! ğŸ˜…",
    },
  },
  email: {
    required: "L'email est nÃ©cessaire pour t'identifier' ! ğŸ“©",
    pattern: {
      value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,
      message: "Hmm, Ã§a ne ressemble pas Ã  un email valide... ğŸ“§",
    },
  },
  password: {
    required: "Un mot de passe sÃ©curisÃ©, c'est important ! ğŸ”’",
    minLength: {
      value: 12,
      message: "Minimum 12 caractÃ¨res pour sÃ©curiser ton compte ! ğŸ’ª",
    },
    maxLength: {
      value: 150,
      message: "150 caractÃ¨res max, pas besoin d'en faire trop ! ğŸ˜‰",
    },
    validate: (value: string) => {
      if (!/[a-z]/.test(value)) return "Ajoute au moins une minuscule (a-z) ğŸ” ";
      if (!/[A-Z]/.test(value)) return "Ajoute au moins une majuscule (A-Z) ğŸ”¡";
      if (!/[0-9]/.test(value)) return "Ajoute au moins un chiffre (0-9) ğŸ”¢";
      if (!/[#?!@$%^&*\-+'()\[\]_]/.test(value))
        return "Ajoute au moins un caractÃ¨re spÃ©cial (#?!@$%^&*-'+()_[]) ğŸ”‘";
      return true;
    },
  },
  confirmPassword: (watch: (field: string) => string) => ({
    required: "Confirme ton mot de passe pour Ã©viter les erreurs ! âœ…",
    minLength: {
      value: 12,
      message: "Minimum 12 caractÃ¨res, comme l'original !",
    },
    maxLength: {
      value: 150,
      message: "Pas plus de 150 caractÃ¨res, comme l'original !",
    },
    validate: (value: string) =>
      watch("password") !== value
        ? "Oups ! Les mots de passe ne correspondent pas. ğŸ¤”"
        : undefined,
  }),
};
